#include "PPSInput.hh"
#include "PPSInputMessenger.hh"
#include "globals.hh"

PPSInput::PPSInput():itsName("")
		    ,pola_file(false)
{
  inputMessenger = new PPSInputMessenger(this);
}

PPSInput::~PPSInput()
{
  input_file.close();
}

void PPSInput::SetInputBunch(G4String NameFile)
{
  itsName = NameFile;
  G4String real_name_file;
  //Due to "/" pb POLA_ can not be found so I made this trick
  size_t found=itsName.find_last_of("/\\");
  real_name_file=itsName.substr(found+1);
  G4cout << itsName << " " << real_name_file << G4endl;
  input_file.open(itsName);
  if(!real_name_file.find("POLA_"))
    { 
      G4cout << "Input file polarized" << G4endl;
      pola_file = true;
    }
  else G4cout <<  " Input file not polarized"<< G4endl; 
  
  if(!input_file.good()){ G4cerr<<"Cannot open bunch file "<< itsName <<G4endl; exit(1);}
}

void PPSInput::GetNextParticle(G4double& x0 , G4double& y0 ,
			       G4double& px0, G4double& py0, G4double& pz0,
			       G4double& Sx0, G4double& Sy0, G4double& Sz0)
{
  
#define _READ(value) input_file>>value
  
	if(_READ(x0))
	{
		_READ(y0);
		_READ(px0);
		_READ(py0);
		_READ(pz0);
		if(pola_file==true)
		{
			if(_READ(Sx0))
			{
				_READ(Sy0);
				_READ(Sz0);
			}
		}
		else
		{
			Sx0=0.;
			Sy0=0.;
			Sz0=0.;	  
		}
	}
}		  
